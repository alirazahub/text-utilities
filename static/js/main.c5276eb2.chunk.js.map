{"version":3,"sources":["components/Navbar.js","components/Form.js","components/Alert.js","components/About.js","components/Error.jsx","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","to","title","type","id","onClick","toggle","role","htmlFor","FormComponents","useState","text","setText","style","color","heading","rows","value","backgroundColor","onChange","event","target","length","trim","split","newText","toUpperCase","showAlert","toLowerCase","copyText","document","getElementById","select","navigator","clipboard","writeText","join","Alert","alert","word","lower","charAt","slice","capt","message","class","About","scope","colspan","defaultProps","Error","location","useLocation","pathname","App","setMode","setAlert","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"qOAKe,SAASA,EAAOC,GAC7B,OACE,qBAAKC,UAAS,yCAAoCD,EAAME,KAA1C,eAAqDF,EAAME,MAAzE,SACE,sBAAKD,UAAU,kBAAf,UACE,cAAC,IAAD,CAAMA,UAAU,eAAeE,GAAG,IAAlC,SAAuCH,EAAMI,QAC7C,wBAAQH,UAAU,iBAAiBI,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAA5L,SACE,sBAAMJ,UAAU,0BAElB,sBAAKA,UAAU,2BAA2BK,GAAG,yBAA7C,UACE,qBAAIL,UAAU,kCAAd,UACE,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,kBAAkB,eAAa,OAAOE,GAAG,IAAzD,oBAEF,oBAAIF,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,WAAWE,GAAG,SAA9B,wBAGJ,sBAAKF,UAAS,sCAA8C,UAAbD,EAAME,KAAe,OAAO,SAA3E,UACA,uBAAOD,UAAU,mBAAmBM,QAASP,EAAMQ,OAAQH,KAAK,WAAWI,KAAK,SAASH,GAAG,2BAC5F,uBAAOL,UAAU,mBAAmBS,QAAQ,yBAA5C,wCCtBK,SAASC,EAAeX,GACnC,IAyBA,EAAwBY,mBAAS,mBAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,OACI,qCACI,qBAAKb,UAAU,YAAYc,MAAO,CAAEC,MAAsB,SAAfhB,EAAME,KAAkB,QAAU,SAA7E,SACI,sBAAKD,UAAU,OAAf,UACI,6BAAKD,EAAMiB,UACX,0BAAUhB,UAAU,eAAeK,GAAG,QAAQY,KAAK,IAAIC,MAAON,EAAME,MAAO,CAAEK,gBAAgC,SAAfpB,EAAME,KAAkB,YAAa,QAASc,MAAsB,SAAfhB,EAAME,KAAkB,QAAU,SAAWmB,SAlBzL,SAACC,GACpBR,EAAQQ,EAAMC,OAAOJ,UAkBT,8BAAoB,IAAhBN,EAAKW,OAAe,EAAIX,EAAKY,OAAOC,MAAM,QAAQF,OAAtD,oBAA+EX,EAAKW,OAApF,uBACA,wBAAQvB,UAAU,mCAAmCM,QAjC/C,WAClB,IAAIoB,EAAUd,EAAKe,cACnBd,EAAQa,GACR3B,EAAM6B,UAAU,0BAA2B,YA8B/B,mCACA,wBAAQ5B,UAAU,mCAAmCM,QA7B/C,WAClB,IAAIoB,EAAUd,EAAKiB,cACnBhB,EAAQa,IA2BI,mCACA,wBAAQ1B,UAAU,mCAAmCM,QA1BjD,WAEhBO,EADc,KAyBF,mBACA,wBAAQb,UAAU,mCAAmCM,QApBlD,WACf,IAAIwB,EAAWC,SAASC,eAAe,SACvCF,EAASG,SACTC,UAAUC,UAAUC,UAAUN,EAASZ,QAiB3B,uBACA,wBAAQlB,UAAU,mCAAmCM,QAhB5C,WACrB,IAAIoB,EAAUd,EAAKa,MAAM,QACzBZ,EAAQa,EAAQW,KAAK,OAcT,qCAIR,qBAAKrC,UAAU,iBC1CZ,SAASsC,EAAMvC,GAK1B,OAEIA,EAAMwC,OAAS,sBAAKvC,UAAS,gCAA2BD,EAAMwC,MAAMnC,KAAvC,gCAA2EI,KAAK,QAA9F,UACX,iCAPK,SAACgC,GACV,IAAMC,EAAQD,EAAKX,cACnB,OAAOY,EAAMC,OAAO,GAAGf,cAAgBc,EAAME,MAAM,GAKtCC,CAAK7C,EAAMwC,MAAMnC,QADf,KACiCL,EAAMwC,MAAMM,QACxD,wBAAQzC,KAAK,SAAS0C,MAAM,YAAY,kBAAgB,QAAQ,aAAW,aCTxE,SAASC,IACtB,OAAO,sBAAK/C,UAAU,YAAf,UAGH,oBAAIA,UAAU,mBAAd,mBACN,wBAAO8C,MAAM,QAAb,UACE,gCACE,+BACE,oBAAIE,MAAM,MAAV,eACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,yBAGJ,kCACE,+BACE,oBAAIA,MAAM,MAAV,eACA,sCACA,sCACA,yCAEF,+BACE,oBAAIA,MAAM,MAAV,eACA,uCACA,0CACA,yCAEF,+BACE,oBAAIA,MAAM,MAAV,eACA,oBAAIC,QAAQ,IAAZ,4BACA,mDAMA,oBAAIjD,UAAU,mBAAd,uBAEA,sBAAKA,UAAU,YAAYK,GAAG,mBAA9B,UACJ,sBAAKL,UAAU,iBAAf,UACE,oBAAIA,UAAU,mBAAmBK,GAAG,aAApC,SACE,wBAAQL,UAAU,mBAAmBI,KAAK,SAAS,iBAAe,WAAW,iBAAe,eAAe,gBAAc,OAAO,gBAAc,cAA9I,iCAIF,qBAAKC,GAAG,cAAcL,UAAU,mCAAmC,kBAAgB,aAAa,iBAAe,oBAA/G,SACE,sBAAKA,UAAU,iBAAf,UACE,8EADF,6WACqa,mDADra,uDAKJ,sBAAKA,UAAU,iBAAf,UACE,oBAAIA,UAAU,mBAAmBK,GAAG,aAApC,SACE,wBAAQL,UAAU,6BAA6BI,KAAK,SAAS,iBAAe,WAAW,iBAAe,eAAe,gBAAc,QAAQ,gBAAc,cAAzJ,iCAIF,qBAAKC,GAAG,cAAcL,UAAU,8BAA8B,kBAAgB,aAAa,iBAAe,oBAA1G,SACE,sBAAKA,UAAU,iBAAf,UACE,+EADF,8WACua,mDADva,uDAKJ,sBAAKA,UAAU,iBAAf,UACE,oBAAIA,UAAU,mBAAmBK,GAAG,eAApC,SACE,wBAAQL,UAAU,6BAA6BI,KAAK,SAAS,iBAAe,WAAW,iBAAe,iBAAiB,gBAAc,QAAQ,gBAAc,gBAA3J,iCAIF,qBAAKC,GAAG,gBAAgBL,UAAU,8BAA8B,kBAAgB,eAAe,iBAAe,oBAA9G,SACE,sBAAKA,UAAU,iBAAf,UACE,8EADF,8WACsa,mDADta,6DHtCNF,EAAOoD,aAAe,CACpB/C,MAAO,S,WIZMgD,MAnBf,WAEE,IAAMC,EAAWC,cACjB,OACE,sBAAKrD,UAAU,YAAf,UAEJ,qBAAK,aAAW,aAAhB,SACE,qBAAIA,UAAU,aAAd,UACE,cAAC,IAAD,CAAME,GAAG,IAAT,oBACA,qBAAIF,UAAU,mBAAd,cAAmCoD,EAASE,SAA5C,YAIJ,qBAAKtD,UAAU,iCAAf,4BACA,cAAC,IAAD,CAAME,GAAG,IAAIF,UAAU,0BAAvB,sCC6CeuD,MAjDf,WACE,MAAwB5C,mBAAS,SAAjC,mBAAOV,EAAP,KAAauD,EAAb,KACA,EAA0B7C,mBAAS,MAAnC,mBAAO4B,EAAP,KAAckB,EAAd,KAEM7B,EAAY,SAACiB,EAASzC,GAC1BqD,EAAS,CACPZ,QAASA,EACTzC,KAAMA,KAiBV,OACE,mCACE,eAAC,IAAD,WACE,cAACN,EAAD,CAAQK,MAAM,cAAcF,KAAMA,EAAMM,OAjB/B,WACA,SAATN,GACFuD,EAAQ,SACRzB,SAAS2B,KAAK5C,MAAMK,gBAAkB,QACtCS,EAAU,6BAA8B,UACxCG,SAAS5B,MAAQ,0BAGjBqD,EAAQ,QACRzB,SAAS2B,KAAK5C,MAAMK,gBAAkB,OACtCS,EAAU,8BAA+B,UACzCG,SAAS5B,MAAQ,2BAOf,cAACmC,EAAD,CAAOC,MAAOA,IACd,eAAC,IAAD,WACE,cAAC,IAAD,CAAOoB,OAAK,EAACC,KAAK,SAAlB,SACE,cAACb,EAAD,MAGF,cAAC,IAAD,CAAOY,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,CAAMhC,UAAWA,EAAWZ,QAAQ,uBAAuBf,KAAMA,SAGrE,cAAC,IAAD,CAAO0D,OAAK,EAACC,KAAK,eAAlB,SACY,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,SAAlB,SACI,cAAC,EAAD,YC5CLC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFzC,SAASC,eAAe,SAM1B6B,M","file":"static/js/main.c5276eb2.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n            </li>\r\n          </ul>\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n          <input className=\"form-check-input\" onClick={props.toggle} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n        </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired\r\n}\r\nNavbar.defaultProps = {\r\n  title: 'TITLE'\r\n}","import React, { useState } from 'react'\r\n\r\nexport default function FormComponents(props) {\r\n    const handleUpClick = () => {\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Upper Case\", \"success\");\r\n    }\r\n    const handleLoClick = () => {\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n    }\r\n    const handleClear = () => {\r\n        let newText = \"\";\r\n        setText(newText);\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n    const handleCopy = () => {\r\n        let copyText = document.getElementById(\"myBox\");\r\n        copyText.select();\r\n        navigator.clipboard.writeText(copyText.value);\r\n    }\r\n    const handleExtraSpace = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n    }\r\n    const [text, setText] = useState('Enter Text Here');\r\n    return (\r\n        <>\r\n            <div className='container' style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\r\n                <div className=\"mb-3\">\r\n                    <h1>{props.heading}</h1>\r\n                    <textarea className='form-control' id=\"myBox\" rows=\"8\" value={text} style={{ backgroundColor: props.mode === 'dark' ? '\t#989898' : 'white', color: props.mode === 'dark' ? 'white' : 'black' }} onChange={handleOnChange}></textarea>\r\n                    <p>{text.length === 0 ? 0 : text.trim().split(/\\n| /).length} Total Words and {text.length} Total Characters</p>\r\n                    <button className=\"btn btn-outline-danger my-2 mx-2\" onClick={handleUpClick}>Convert to UPPER-CASE</button>\r\n                    <button className=\"btn btn-outline-danger my-2 mx-2\" onClick={handleLoClick}>Convert to Lower-Case</button>\r\n                    <button className=\"btn btn-outline-danger my-2 mx-2\" onClick={handleClear}>Clear</button>\r\n                    <button className=\"btn btn-outline-danger my-2 mx-2\" onClick={handleCopy}>Copy text</button>\r\n                    <button className=\"btn btn-outline-danger my-2 mx-2\" onClick={handleExtraSpace}>Remove Extra Space</button>\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"container\">\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capt = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n\r\n        props.alert && <div className={`alert container alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capt(props.alert.type)}</strong>: {props.alert.message}\r\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nexport default function About() {\r\n  return <div className='container'>\r\n\r\n\r\n      <h1 className='text-center my-5'>About</h1>\r\n<table class=\"table\">\r\n  <thead>\r\n    <tr>\r\n      <th scope=\"col\">#</th>\r\n      <th scope=\"col\">First</th>\r\n      <th scope=\"col\">Last</th>\r\n      <th scope=\"col\">Handle</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <th scope=\"row\">1</th>\r\n      <td>Mark</td>\r\n      <td>Otto</td>\r\n      <td>@mdo</td>\r\n    </tr>\r\n    <tr>\r\n      <th scope=\"row\">2</th>\r\n      <td>Jacob</td>\r\n      <td>Thornton</td>\r\n      <td>@fat</td>\r\n    </tr>\r\n    <tr>\r\n      <th scope=\"row\">3</th>\r\n      <td colspan=\"2\">Larry the Bird</td>\r\n      <td>@twitter</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n\r\n\r\n      <h1 className='text-center my-5'>Accordian</h1>\r\n      \r\n      <div className=\"accordion\" id=\"accordionExample\">\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n      <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n        Accordion Item #1\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\">\r\n        <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n      <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n        Accordion Item #2\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\">\r\n        <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n      <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n        Accordion Item #3\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\">\r\n        <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n  </div>;\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport {useLocation} from 'react-router-dom'\r\n\r\nfunction Error() {\r\n\r\n  const location = useLocation();\r\n  return (\r\n    <div className=\"container\">\r\n\r\n<nav aria-label=\"breadcrumb\">\r\n  <ol className=\"breadcrumb\">\r\n    <Link to=\"/\"> Home </Link>\r\n    <li className=\"breadcrumb-item \"> {location.pathname} </li>\r\n    \r\n  </ol>\r\n</nav>\r\n<div className='display-1 notFound text-center'>Not Found! 404</div>\r\n<Link to='/' className='btn btn-outline-primary' >Go Back to HOME PAGE</Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Error;","import './App.css';\nimport React, { useState } from 'react'\nimport Navbar from './components/Navbar';\nimport Form from './components/Form';\nimport Alert from './components/Alert';\nimport About from './components/About';\nimport Error from './components/Error';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      message: message,\n      type: type\n    })\n  }\n  const toggle = () => {\n    if (mode === 'dark') {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Dark mode has been enabled\", \"danger\");\n      document.title = \"TextUtils - LightMode\";\n    }\n    else {\n      setMode('dark');\n      document.body.style.backgroundColor = 'grey';\n      showAlert(\"Light mode has been enabled\", \"danger\");\n      document.title = \"TextUtils - DarkMode\";\n    }\n  }\n  return (\n    <>\n      <Router>\n        <Navbar title=\"New Project\" mode={mode} toggle={toggle} />\n        <Alert alert={alert} />\n        <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n          \n          <Route exact path=\"/\">\n            <Form showAlert={showAlert} heading=\"Enter Text To Update\" mode={mode} />\n          </Route>\n        </Switch>\n        <Route exact path=\"/:opt1/:opt2\">\n                    <Error />\n                </Route>\n                <Route exact path=\"/:opt1\">\n                    <Error />\n                </Route>\n      </Router>\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}